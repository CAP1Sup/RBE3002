<launch>
  <arg name="use_sim" default="false" />
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]" />
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua" />
  <arg name="set_base_frame" default="base_footprint" />
  <arg name="set_odom_frame" default="odom" />
  <arg name="set_map_frame" default="map" />
  <arg name="maze" default="turtlebot" /> <!-- change to "final_maze" for a more open/"easy" map -->

  <group if="$(arg use_sim)">
    <!-- Gazebo -->
    <include file="$(find lab4)/launch/world_sim.launch">
      <arg name="model" value="$(arg model)" />
      <arg name="world" value="$(arg maze)" />
    </include>
  </group>

  <!-- TurtleBot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch" />

  <!-- Gmapping -->
  <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" args="2>/dev/null">
    <param name="base_frame" value="$(arg set_base_frame)" />
    <param name="odom_frame" value="$(arg set_odom_frame)" />
    <param name="map_frame" value="$(arg set_map_frame)" />
    <rosparam command="load" file="$(find lab4)/config/gmapping_params.yaml" />
  </node>

  <!-- Frontier Finder -->
  <node pkg="lab4" type="frontier_finder.py" name="frontier_finder" output="screen" />

  <!-- Maze Explorer -->
  <node pkg="lab4" type="maze_explorer.py" name="maze_explorer" output="screen" />

  <!-- Path Planner -->
  <node pkg="lab3" type="path_planner.py" name="path_planner" output="screen"
    args="--use_dynamic_map --padding 4" />

  <!-- Path Executor -->
  <node pkg="lab4" type="go_to_point.py" name="go_to_point" output="screen" />

  <!-- RViz -->
  <node pkg="rviz" type="rviz" name="rviz" required="true"
    args="-d $(find lab4)/rviz/explore_maze.rviz" />

</launch>